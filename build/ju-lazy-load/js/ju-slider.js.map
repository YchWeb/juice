{"version":3,"names":[],"mappings":"","sources":["ju-slider.js"],"sourcesContent":["'use strict';\n\n/* slider AMD Export */\n/*eslint-disable */\nif (typeof module !== 'undefined') {\n    module.exports = window.slider;\n} else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        return window.slider;\n    });\n}\n/*eslint-enable */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar slider = function () {\n    function slider(selector) {\n        _classCallCheck(this, slider);\n\n        this.config = {\n            autoPlayTime: 3, // 单位秒\n            speed: 600,\n            zIndex: 2,\n            onPrevtStart: null,\n            onPrevtEnd: null,\n            onNextStart: null,\n            onNextEnd: null\n        };\n\n        this.extraConfig = arguments.length <= 1 ? undefined : arguments[1];\n        Object.assign(this.config, this.extraConfig);\n\n        // 触摸\n        this.x = 0;\n        this.xCurrent = 0;\n\n        this.y = 0;\n        this.yCurrent = 0;\n\n        // 方向\n        this.direction = 'stay';\n\n        // 定时器\n        this.timer = null;\n        this.isPaused = false;\n\n        // 选择器\n        this.selector = document.querySelector(selector);\n        this.length = this.selector.querySelectorAll('li').length;\n        this.clientWidth = this.selector.clientWidth;\n        this.isRunning = false;\n\n        // 位置\n        this.minMove = 20;\n        this.calPosition = 0;\n        this.prevCalPosition = -this.clientWidth;\n        this.nextCalPosition = this.clientWidth;\n\n        // 状态\n        this.selector.style.zIndex = this.config.zIndex;\n        this.index = 0;\n        this.indexPrev = this.length - 1;\n        this.indexNext = 1;\n\n        // 是否是第一张\n        this.indexFlag = true;\n        this.canMoveX = true;\n        this.canMoveY = true;\n\n        // 初始化元素\n        this.ul = this.selector.querySelector('ul');\n        this.li = this.selector.querySelectorAll('li');\n        this.setElements();\n        // 初始化程序\n        this.init(this.config);\n    }\n\n    _createClass(slider, [{\n        key: 'setElements',\n        value: function setElements() {\n            this.elmentLi = this.li[this.index];\n            this.elmentLiPrev = this.li[this.indexPrev];\n            this.elmentLiNext = this.li[this.indexNext];\n\n            this.elment = this.elmentLi.children[0];\n            this.elmentPrev = this.elmentLiPrev.children[0];\n            this.elmentNext = this.elmentLiNext.children[0];\n        }\n    }, {\n        key: 'init',\n        value: function init(config) {\n            var _this = this;\n\n            this.addFocus();\n            this.setActiveFocus();\n            this.requestAnimationFrame();\n\n            // 启动自动播放\n            this.autoPlay();\n            this.autoPause();\n\n            this.ul.addEventListener('touchstart', function (event) {\n                // 禁止自动播放\n                _this.cancelAutoPlay();\n\n                if (_this.isRunning) {\n                    return true;\n                }\n\n                _this.x = event.changedTouches[0].pageX;\n                _this.y = event.changedTouches[0].pageY;\n\n                return false;\n            });\n\n            this.ul.addEventListener('touchmove', function (event) {\n                event.preventDefault();\n                if (_this.isRunning) {\n                    return true;\n                }\n\n                _this.xCurrent = event.changedTouches[0].pageX;\n                _this.yCurrent = event.changedTouches[0].pageY;\n\n                // 上下滑动\n                if (_this.canMoveY) {\n                    window.scrollBy(0, _this.y - _this.yCurrent);\n                    if (Math.abs(_this.y - _this.yCurrent) > 12) {\n                        _this.canMoveX = false;\n                    }\n                }\n\n                // 左右滑动\n                if (_this.canMoveX) {\n                    _this.calPosition = _this.xCurrent - _this.x;\n                    // 防止超出\n                    if (_this.length > 1) {\n                        if (_this.calPosition >= _this.clientWidth) {\n                            _this.calPosition = _this.clientWidth;\n                        }\n\n                        if (_this.calPosition <= -_this.clientWidth) {\n                            _this.calPosition = -_this.clientWidth;\n                        }\n                    } else {\n                        return false;\n                    }\n\n                    _this.elmentLi.style.visibility = 'visible';\n\n                    _this.prevCalPosition = _this.calPosition - _this.clientWidth;\n                    _this.nextCalPosition = _this.clientWidth + _this.calPosition;\n\n                    if (_this.calPosition >= 0) {\n                        // 向右滑动,上一张\n                        _this.elmentLiPrev.style.visibility = 'visible';\n                        _this.elmentPrev.style.transform = 'translate3d(' + _this.prevCalPosition + 'px,0,0)';\n                    } else {\n                        // 向左滑动,下一张\n                        _this.elmentLiNext.style.visibility = 'visible';\n                        _this.elmentNext.style.transform = 'translate3d(' + _this.nextCalPosition + 'px,0,0)';\n                    }\n\n                    if (Math.abs(_this.calPosition) > _this.minMove) {\n                        _this.canMoveY = false;\n                        _this.elment.style.transform = 'translate3d(' + _this.calPosition + 'px,0,0)';\n\n                        // 向左滑动\n                        if (_this.calPosition > 0) {\n                            _this.direction = 'left';\n                            if (_this.length > 2) {\n                                _this.elmentLiNext.style.visibility = 'hidden';\n                            }\n                        } else if (_this.calPosition < 0) {\n                            _this.direction = 'right';\n                            if (_this.length > 2) {\n                                _this.elmentLiPrev.style.visibility = 'hidden';\n                            }\n                        } else {\n                            _this.direction = 'stay';\n                        }\n                    }\n                }\n\n                return false;\n            });\n\n            this.ul.addEventListener('touchend', function (event) {\n                _this.canMoveX = true;\n                _this.canMoveY = true;\n\n                if (_this.isRunning) {\n                    return true;\n                }\n\n                switch (_this.direction) {\n                    case 'left':\n                        _this.prev(false);\n                        _this.direction = 'stay';\n                        break;\n                    case 'right':\n                        _this.next(false);\n                        _this.direction = 'stay';\n                        break;\n                    case 'stay':\n                        _this.stay();\n                        break;\n                    default:\n                        _this.stay();\n                        break;\n                }\n\n                // 启动自动播放\n                _this.autoPlay();\n                return false;\n            });\n        }\n    }, {\n        key: 'setIndex',\n        value: function setIndex() {\n            if (this.index === 0) {\n                this.indexPrev = this.length - 1;\n            } else {\n                this.indexPrev = this.index - 1;\n            }\n\n            if (this.index >= this.length - 1) {\n                this.indexNext = 0;\n            } else {\n                this.indexNext = this.index + 1;\n            }\n        }\n    }, {\n        key: 'setIndexFlag',\n        value: function setIndexFlag() {\n            if (this.index === 0) {\n                this.indexFlag = true;\n            } else {\n                this.indexFlag = false;\n            }\n        }\n    }, {\n        key: 'autoPlay',\n        value: function autoPlay() {\n            var _this2 = this;\n\n            this.timer = null;\n            this.timer = setInterval(function () {\n                if (!_this2.isPaused) {\n                    _this2.next();\n                }\n            }, this.config.autoPlayTime * 1000);\n        }\n    }, {\n        key: 'cancelAutoPlay',\n        value: function cancelAutoPlay() {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }, {\n        key: 'autoPause',\n        value: function autoPause() {\n            var _this3 = this;\n\n            document.addEventListener('visibilitychange', function () {\n                if (document.visibilityState === 'hidden') {\n                    _this3.isPaused = true;\n                } else {\n                    _this3.isPaused = false;\n                }\n            });\n        }\n    }, {\n        key: 'prev',\n        value: function prev() {\n            var _this4 = this;\n\n            var isMaual = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n            // 回调\n            if (this.isFunction(this.config.onPrevtStart)) {\n                this.config.onPrevtStart.call(this);\n            }\n\n            if (isMaual) {\n                this.cancelAutoPlay();\n            }\n\n            if (this.index === 0) {\n                this.indexFlag = true;\n            } else {\n                this.indexFlag = false;\n            }\n\n            var elment = this.li[this.index].children[0];\n            var elmentPrev = this.li[this.indexPrev].children[0];\n\n            var elmentLi = this.li[this.index];\n            var elmentLiPrev = this.li[this.indexPrev];\n\n            elmentLi.style.visibility = 'visible';\n            elmentLiPrev.style.visibility = 'visible';\n\n            var start = 0;\n            var run = function run() {\n                _this4.isRunning = true;\n\n                start++;\n                _this4.prevCalPosition = _this4.easeOutCubic(start, _this4.prevCalPosition, _this4.clientWidth, _this4.config.speed);\n                _this4.calPosition = _this4.easeOutCubic(start, _this4.calPosition, _this4.clientWidth, _this4.config.speed);\n\n                elmentPrev.style.transform = 'translate3d(' + _this4.prevCalPosition + 'px,0,0)';\n                elment.style.transform = 'translate3d(' + _this4.calPosition + 'px,0,0)';\n\n                if (_this4.calPosition < _this4.clientWidth) {\n                    requestAnimationFrame(run);\n                } else {\n                    _this4.prevCalPosition = -_this4.clientWidth;\n                    _this4.calPosition = 0;\n\n                    elmentPrev.style.transform = 'translate3d(0,0,0)';\n                    elment.style.transform = 'translate3d(0,0,0)';\n                    elmentLi.style.visibility = 'hidden';\n\n                    _this4.isRunning = false;\n\n                    if (_this4.indexFlag) {\n                        _this4.index = _this4.length - 1;\n                    } else {\n                        if (_this4.index > 0) {\n                            _this4.index--;\n                        }\n                    }\n                    _this4.setActiveFocus();\n                    _this4.setIndex();\n                    _this4.setElements();\n\n                    // 回调\n                    if (_this4.isFunction(_this4.config.onPrevEnd)) {\n                        _this4.config.onPrevEnd.call(_this4);\n                    }\n\n                    if (isMaual) {\n                        _this4.autoPlay();\n                    }\n                }\n            };\n\n            if (this.isRunning) {\n                window.cancelAnimationFrame(run);\n            } else {\n                run();\n            }\n\n            return false;\n        }\n    }, {\n        key: 'next',\n        value: function next() {\n            var _this5 = this;\n\n            var isMaual = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n            // 回调\n            if (this.isFunction(this.config.onNextStart)) {\n                this.config.onNextStart.call(this);\n            }\n\n            if (isMaual) {\n                this.cancelAutoPlay();\n            }\n\n            if (this.index >= this.length - 1) {\n                this.indexNext = 0;\n                this.indexFlag = false;\n            } else {\n                this.indexFlag = true;\n            }\n\n            this.elmentLi.style.visibility = 'visible';\n            this.elmentLiNext.style.visibility = 'visible';\n\n            // 初始化prev\n            this.x = this.calPosition + this.clientWidth;\n\n            var start = 0;\n            var run = function run() {\n                _this5.isRunning = true;\n\n                start++;\n                _this5.x = _this5.easeOutCubic(start, _this5.x, -_this5.clientWidth, _this5.config.speed);\n                _this5.calPosition = _this5.easeOutCubic(start, _this5.calPosition, -_this5.clientWidth, _this5.config.speed);\n\n                _this5.elmentNext.style.transform = 'translate3d(' + _this5.x + 'px,0,0)';\n                _this5.elment.style.transform = 'translate3d(' + _this5.calPosition + 'px,0,0)';\n\n                if (_this5.calPosition > -_this5.clientWidth) {\n                    requestAnimationFrame(run);\n                } else {\n                    _this5.x = 0;\n                    _this5.calPosition = 0;\n\n                    _this5.elmentNext.style.transform = 'translate3d(' + _this5.x + 'px,0,0)';\n                    _this5.elment.style.transform = 'translate3d(' + _this5.calPosition + 'px,0,0)';\n\n                    _this5.elmentLi.style.visibility = 'hidden';\n\n                    _this5.isRunning = false;\n\n                    if (_this5.indexFlag) {\n                        if (_this5.index < _this5.length - 1) {\n                            _this5.index++;\n                        }\n                    } else {\n                        _this5.index = 0;\n                    }\n                    _this5.setActiveFocus();\n                    _this5.setIndex();\n                    _this5.setElements();\n\n                    // 回调\n                    if (_this5.isFunction(_this5.config.onNextEnd)) {\n                        _this5.config.onNextEnd.call(_this5);\n                    }\n\n                    if (isMaual) {\n                        _this5.autoPlay();\n                    }\n                }\n            };\n\n            if (this.isRunning) {\n                window.cancelAnimationFrame(run);\n            } else {\n                run();\n            }\n\n            return false;\n        }\n    }, {\n        key: 'stay',\n        value: function stay() {\n            this.isRunning = false;\n        }\n\n        // 添加指示器\n\n    }, {\n        key: 'addFocus',\n        value: function addFocus() {\n            var innerHtml = '';\n            var baseHtml = '<span class=\"focus-horizontal-bullet\"></span>';\n            var $focus = this.selector.querySelector('.focus-horizontal');\n\n            for (var i = 0; i < this.length; ++i) {\n                innerHtml += baseHtml;\n            }\n\n            $focus.innerHTML = innerHtml;\n        }\n\n        // 激活指示器\n\n    }, {\n        key: 'setActiveFocus',\n        value: function setActiveFocus() {\n            var $bullets = this.selector.querySelectorAll('.focus-horizontal-bullet');\n\n            for (var i = 0, l = $bullets.length; i < l; ++i) {\n                var className = $bullets[i].className.replace(' active', '');\n                if (i !== this.index) {\n                    $bullets[i].className = className;\n                } else {\n                    $bullets[i].className = className + ' active';\n                }\n            }\n        }\n\n        /*\r\n         * t: current time（当前时间）；\r\n         * b: beginning value（初始值）；\r\n         * c: change in value（变化量）；\r\n         * d: duration（持续时间）。\r\n         * you can visit 'http://easings.net/zh-cn' to get effect\r\n        */\n\n    }, {\n        key: 'easeOutCubic',\n        value: function easeOutCubic(currentTime, beginValue, changeInValue, duration) {\n            var t = currentTime;\n            var b = beginValue;\n            var c = changeInValue;\n            var d = duration;\n\n            return c * ((t = t / d - 1) * t * t + 1) + b;\n        }\n    }, {\n        key: 'requestAnimationFrame',\n        value: function requestAnimationFrame() {\n            var lastTime = 0;\n            var vendors = ['webkit', 'moz'];\n            for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n                window.requestAnimationFrame = 'window[' + vendors[x] + 'RequestAnimationFrame]';\n                window.cancelAnimationFrame = 'window[' + vendors[x] + 'CancelAnimationFrame]' || 'window[' + vendors[x] + 'CancelRequestAnimationFrame]';\n            }\n\n            if (!window.requestAnimationFrame) {\n                window.requestAnimationFrame = function (callback, element) {\n                    var currTime = new Date().getTime();\n                    var timeToCall = Math.max(0, 16.7 - (currTime - lastTime));\n                    var id = window.setTimeout(function () {\n                        callback(currTime + timeToCall);\n                    }, timeToCall);\n                    lastTime = currTime + timeToCall;\n                    return id;\n                };\n            }\n            if (!window.cancelAnimationFrame) {\n                window.cancelAnimationFrame = function (id) {\n                    clearTimeout(id);\n                };\n            }\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(fn) {\n            return Object.prototype.toString.call(fn) === '[object Function]';\n        }\n    }]);\n\n    return slider;\n}();\n\nwindow.slider = slider;"],"file":"ju-slider.js","sourceRoot":"/source/"}